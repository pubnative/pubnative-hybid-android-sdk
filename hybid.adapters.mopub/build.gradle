def project_name = project.name
def version_name = project.version
if (branchName != "master") {
    version_name = "${version_name}-${branchName}.${buildNumber}"
    project_name = "${project_name}.beta"
}

version = version_name
//==================================================================================================
// ANDROID
//==================================================================================================
apply plugin: 'com.android.library'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode System.getenv("CIRCLE_BUILD_NUM") ? System.getenv("CIRCLE_BUILD_NUM").toInteger() : 1
        versionName version_name
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':hybid.sdk.core')
    implementation project(':hybid.sdk.native')
    implementation project(':hybid.sdk.fullscreen')
    implementation project(':hybid.sdk.banner')
    implementation project(':hybid.sdk.rewarded')
    implementation project(':hybid.sdk.logger')
    implementation project(':hybid.sdk.source.pnapi')
    
    compileOnly('com.mopub:mopub-sdk:5.18.0@aar') {
        transitive = true
    }
}

//--------------------------------------------------------------------------------------------------
// PUBLISHING
//--------------------------------------------------------------------------------------------------
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

publishing {
    publications {

        aar(MavenPublication) {
            groupId project.group
            artifactId project.name
            version version_name
            if (branchName == "master") {
                artifact sourcesJar
            }
            android.libraryVariants.all { variant ->
                if (variant.buildType.name == "debug") return
                artifact variant.outputs[0].packageLibrary // This is the aar library
            }
        }
    }

    artifactoryPublish {
        publications(publishing.publications.aar)
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_CONTEXT_URL")
    publish {
        repository {
            repoKey = 'verve-gradle-release-local'
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
            maven = true
        }

        defaults {
            publishArtifacts = branchName != "master"
            publishPom = true
        }
    }
    resolve {
        repository {
            repoKey = 'verve-gradle-release'
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
            maven = true
        }
    }
}