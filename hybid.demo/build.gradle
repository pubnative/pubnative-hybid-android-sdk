plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    //id 'com.fyber.fairbid-sdk-plugin' version '3.58.0'
    id 'com.google.firebase.appdistribution'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'jacoco'
}

android {
    compileSdk android_api

    defaultConfig {
        applicationId "net.pubnative.lite.demo"
        minSdkVersion min_android_api
        targetSdkVersion android_api
        versionCode System.getenv("GITHUB_RUN_NUMBER") ? System.getenv("GITHUB_RUN_NUMBER").toInteger() : 1
        versionName project.version
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'lite.sdk.pro'
            buildConfigField "String", "BASE_URL", "\"https://api.pubnative.net/\""
            buildConfigField "String", "ONE_TRUST_DOMAIN_ID", "\"6a67554c-409b-4677-a3e3-a9a4cab93ed6-test\""
            buildConfigField "String", "ONE_TRUST_DOMAIN_URL", "\"cdn.cookielaw.org\""
        }
        debug {
            minifyEnabled false
            firebaseAppDistribution {
                appId = "1:786277539067:android:6bb4032ad6f571ab"
                artifactPath = "hybid.demo/build/outputs/apk/debug/hybid.demo-debug.apk"
                artifactType = "APK"
            }
            buildConfigField "String", "BASE_URL", "\"https://api.pubnative.net/\""
            buildConfigField "String", "ONE_TRUST_DOMAIN_ID", "\"6a67554c-409b-4677-a3e3-a9a4cab93ed6-test\""
            buildConfigField "String", "ONE_TRUST_DOMAIN_URL", "\"cdn.cookielaw.org\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    lint {
        abortOnError false
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    namespace 'net.pubnative.lite.demo'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //Hybid Adapters
    implementation project(':hybid.adapters.admob')
    implementation project(':hybid.adapters.dfp')
    implementation project(':hybid.adapters.ironsource')
    implementation project(':hybid.adapters.applovin')

    //Hybid SDK modules
    implementation project(':hybid.sdk')

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.ironsource.sdk:mediationsdk:8.7.0'
    implementation 'com.applovin:applovin-sdk:13.2.0'

    implementation 'com.chartboost:chartboost-mediation-sdk:5.1.0'
    implementation 'com.chartboost:chartboost-mediation-adapter-verve:5.3.0.4.0'
    implementation 'com.google.android.gms:play-services-base:18.6.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:18.2.0'
    implementation 'com.google.android.gms:play-services-appset:16.1.0'

    implementation 'com.google.android.gms:play-services-ads:23.6.0'
    implementation 'com.google.android.ads:mediation-test-suite:3.0.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.8.9"
    implementation "androidx.navigation:navigation-ui-ktx:2.8.9"
    implementation "androidx.preference:preference-ktx:1.2.1"

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation 'androidx.vectordrawable:vectordrawable:1.2.0'
    implementation 'com.google.android.ump:user-messaging-platform:3.2.0'

    implementation platform('com.google.firebase:firebase-bom:33.7.0')
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3"

    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    implementation 'androidx.activity:activity:1.9.3'

    testImplementation 'com.google.truth:truth:1.4.4'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.mockito:mockito-inline:4.5.1'

    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "com.google.truth:truth:1.4.2"

    implementation("com.onetrust.cmp:native-sdk:202309.1.0.0") {
        exclude group: 'androidx.appcompat'
        exclude group: 'androidx.constraintlayout'
        exclude group: 'com.google.android.material'
        exclude group: 'com.google.android.gms'
    }
}


//--------------------------------------------------------------------------------------------------
// JACOCO COVERAGE
//--------------------------------------------------------------------------------------------------
jacoco {
    toolVersion = "0.8.11"
}

tasks.register("jacocoTestReport", JacocoReport) {
    dependsOn 'testDebugUnitTest'

    reports {
        xml.required = true
        html.required = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*']
    def debugTree = fileTree(dir: "$buildDir/intermediates/javac/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)

    sourceDirectories.setFrom(files(["src/main/java"]))
    classDirectories.setFrom(files([debugTree, kotlinDebugTree]))
    executionData.setFrom(fileTree(dir: buildDir, includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"
    ]))
}

tasks.withType(Test).configureEach {
    jacoco {
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}