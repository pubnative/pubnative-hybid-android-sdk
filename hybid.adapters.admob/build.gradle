def project_name = project.name
def version_name = project.version
if (branchName != "master") {
    version_name = "${version_name}-${branchName}.${buildNumber}"
    project_name = "${project_name}.beta"
}
//==================================================================================================
// ANDROID
//==================================================================================================
version = version_name

apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode System.getenv("CIRCLE_BUILD_NUM") ? System.getenv("CIRCLE_BUILD_NUM").toInteger() : 1
        versionName version_name
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':hybid.sdk')
    compileOnly 'com.google.android.gms:play-services-ads:18.2.0'
}

//--------------------------------------------------------------------------------------------------
// MAVEN
// -------------------------------------------------------------------------------------------------
apply plugin: 'maven-publish'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

publishing {
    publications {

        aar(MavenPublication) {
            groupId project.group
            artifactId project.name
            version version_name
            if (branchName == "master") {
                artifact sourcesJar
            }
            android.libraryVariants.all { variant ->
                if (variant.buildType.name == "debug") return
                artifact variant.outputs[0].packageLibrary // This is the aar library
            }
        }
    }
}

//----------------------------------------------------------------------------------------------
// BINTRAY
//----------------------------------------------------------------------------------------------
apply plugin: 'com.jfrog.bintray'

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_API_KEY")
    publish = branchName != "master"
    override = true
    publications = ['aar']
    pkg {
        configurations = ['archives']
        userOrg = 'pubnative'
        repo = 'maven'
        desc = 'HyBid SDK Admob Adapter'
        websiteUrl = "https://pubnative.net"
        name = project_name
        licenses = ['MIT']
        labels = ['android', 'advertising', 'sdk', 'pubnative', 'hybid', 'ads', 'development', 'admob', 'adapter']
        version {
            name = version_name
            vcsTag = version_name
            released = new Date()
            vcsUrl = System.getenv("CIRCLE_REPOSITORY_URL")
        }
    }
}