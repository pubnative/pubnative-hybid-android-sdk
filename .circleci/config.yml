version: 2

references:
  workspace: &workspace
               ~/hybid.sdk

  android_config: &android_config
    working_directory: *workspace

    docker:
      - image: pubnative/android:28_20190219

    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

    ## Cache
  gradle_key: &gradle_key
    jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "hybid.sdk/build.gradle" }}

  gems_key: &gems_key
    gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

  set_locale: &set_locale
    run:
      name: Set UTF-8 Locale
      command: export LC_ALL=en_US.UTF-8

  set_language: &set_language
    run:
      name: Set English Language
      command: export LANG=en_US.UTF-8

  ## Dependencies
  ruby_yum: &ruby_yum
    run:
        name: Install Ruby Dev Libs
        command: yum install -y ruby-devel

  ruby_dependencies: &ruby_dependencies
    run:
        name: Download Ruby Dependencies
        command: bundle check || bundle install --path vendor/bundle

jobs:
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_yum
      - *ruby_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - *set_locale
      - *set_language
      - run:
          name: Run unit tests
          command: bundle exec fastlane unit_tests
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/
      - store_test_results:
          path: app/build/test-results/
          destination: /test-results/

  deploy_crashlytics:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_yum
      - *ruby_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - *set_locale
      - *set_language
      - run:
          name: Deploy to Crashlytics Beta
          command: bundle exec fastlane deploy_to_crashlytics

  publish_bintray:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_yum
      - *ruby_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - *set_locale
      - *set_language
      - run:
          name: Publish to Bintray
          command: ./gradlew bintrayUpload

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test_unit

      - deploy_crashlytics:
          filters:
            branches:
              only:
                - master
                - beta
                - development
                - development-fix_circleci
          requires:
            - test_unit

      - publish_bintray:
          filters:
            branches:
              only:
                - master
                - beta
                - development
                - development-fix_circleci
          requires:
            - test_unit