plugins {
    id 'com.android.library'
    id 'com.jfrog.artifactory'
    id 'maven-publish'
    id "org.sonarqube" version "3.3"
}

def project_name = project.name
def version_name = project.version
if (branchName != null && buildNumber != null && branchName.toString() != "master") {
    version_name = "${version_name}-${branchName}.${buildNumber}"
    project_name = "${project_name}.beta"
}
//==================================================================================================
// ANDROID
//==================================================================================================
version = version_name

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 32
        versionCode System.getenv("CIRCLE_BUILD_NUM") ? System.getenv("CIRCLE_BUILD_NUM").toInteger() : 1
        versionName version_name
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':hybid.sdk')

    implementation project(':hybid.sdk.core')
    implementation project(':hybid.sdk.fullscreen')
    implementation project(':hybid.sdk.banner')
    implementation project(':hybid.sdk.logger')
    implementation project(':hybid.sdk.source.pnapi')

    compileOnly 'com.google.android.gms:play-services-ads:20.6.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

publishing {
    publications {

        aar(MavenPublication) {
            groupId project.group
            artifactId project.name
            version version_name
            if (branchName.toString() == "master") {
                artifact sourcesJar
            }
            android.libraryVariants.all { variant ->
                if (variant.buildType.name == "debug") return
                artifact variant.outputs[0].packageLibrary // This is the aar library
            }
        }
    }

    artifactoryPublish {
        publications(publishing.publications.aar)
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_CONTEXT_URL")
    publish {
        repository {
            repoKey = 'verve-gradle-release-local'
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
            maven = true
        }

        defaults {
            publishArtifacts = branchName.toString() != "master"
            publishPom = true
        }
    }
    resolve {
        repository {
            repoKey = 'verve-gradle-release'
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
            maven = true
        }
    }
}

sonarqube {
    sonarqube {
        properties {
            property "sonar.projectName", "HyBidDemo"
            property "sonar.projectKey", "HyBidDemoSample"
            property "sonar.host.url", "http://localhost:9000"
            property "sonar.projectVersion", version
            property "sonar.language", "java"
            property "sonar.sources", "src/main/"
        }
    }
}